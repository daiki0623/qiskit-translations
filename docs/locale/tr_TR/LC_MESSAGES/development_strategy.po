msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-08 17:23+0000\n"
"PO-Revision-Date: 2021-01-30 22:46\n"
"Last-Translator: \n"
"Language-Team: Turkish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: tr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/development_strategy.po\n"
"X-Crowdin-File-ID: 7206\n"
"Language: tr_TR\n"

#: ../../development_strategy.rst:2
msgid "Development Strategy"
msgstr "Geliştirme Stratejisi"

#: ../../development_strategy.rst:7
msgid "Versioning"
msgstr "Sürüm oluşturma"

#: ../../development_strategy.rst:9
msgid "The Qiskit project is made up of several elements each performing different functionality. Each is independently useful and can be used on their own, but for convenience we provide this repository and meta-package to provide a single entrypoint to install all the elements at once. This is to simplify the install process and provide a unified interface to end users. However, because each Qiskit element has it's own releases and versions some care is needed when dealing with versions between the different repositories. This document outlines the guidelines for dealing with versions and releases of both Qiskit elements and the meta-package."
msgstr "Qiskit projesi, her biri farklı işlevler yerine getiren birçok ögeden oluşur. Her biri bağımsız olarak kullanışlıdır ve kendi başlarına kullanılabilir fakat kolaylık için bütün ögeleri tek bir seferde kurmak için tek bir giriş noktası sağlayacak bu repoyu ve meta paketi sağlıyoruz. Bu kurulum sürecini kolaylaştırmak ve son kullanıcılara birleşik bir arayüz sağlamak içindir. Ancak her Qiskit ögesi kendi sürümüne sahip olduğu için farklı repolar arasında bu versiyonlarla çalışırken sürümler biraz dikkat gerektirir. Bu belge bu sürümlerle hem Qiskit ögelerinin hem de meta paketin sürümleriyle çalışmanın kurallarını özetlemektedir."

#: ../../development_strategy.rst:19
msgid "For the rest of this guide the standard Semantic Versioning nomenclature will be used of: ``Major.Minor.Patch`` to refer to the different components of a version number. For example, if the version number was ``0.7.1``, then the major version is ``0``, the minor version ``7``, and the patch version ``1``."
msgstr "Bu kılavuzun geri kalanı için standart Anlamsal Sürüm Oluşturma terminolojisi şu şekilde kullanılacaktır: ``Major.Minor.Patch`` bir sürüm numarasının farklı bileşenlerine atıfta bulunmak için. Örneğin, sürüm numarası ``0.7.1`` ise, ana sürüm ``0``, alt sürüm ´´7`` ve yama sürümü ´´1``dir."

#: ../../development_strategy.rst:26
msgid "Meta-package Version"
msgstr "Meta Paket Sürümü"

#: ../../development_strategy.rst:28
msgid "The Qiskit meta-package version is an independent value that is determined by the releases of each of the elements being tracked. Each time we push a release to a tracked component (or add an element) the meta-package requirements, and version will need to be updated and a new release published. The timing should be coordinated with the release of elements to ensure that the meta-package releases track with element releases."
msgstr "Qiskit meta paketi sürümü izlenmekte olan ögelerin her birinin sürümleri tarafından belirlenen bağımsız bir değerdir. İzlenen bir bileşene bir sürümü her gönderdiğimizde (veya bir öge eklediğimizde), meta paket gereksinimleri ve sürümün güncellenmesi ve yeni bir sürümün yayınlanması gerekir. Meta paket sürümlerinin, öge sürümleriyle uyumlu olmasını sağlamak için zamanlama, ögelerin yayınlanmasıyla koordine edilmelidir. Meta paket sürümlerinin, öge sürümleriyle uyumlu olmasını sağlamak için zamanlama, ögelerin sürümleriyle koordine edilmelidir."

#: ../../development_strategy.rst:36
msgid "Adding New Elements"
msgstr "Yeni Öğeler Ekleme"

#: ../../development_strategy.rst:38
msgid "When a new Qiskit element is being added to the meta-package requirements, we need to increase the **Minor** version of the meta-package."
msgstr "Meta paket gereksinimlerine yeni bir Qiskit ögesi eklenirken, meta paketin **Minor** sürümünü artırmamız gerekiyor."

#: ../../development_strategy.rst:41
msgid "For example, if the meta-package is tracking 2 elements ``qiskit-aer`` and ``qiskit-terra`` and it's version is ``0.7.4``. Then we release a new element ``qiskit-ignis`` that we intend to also have included in the meta-package. When we add the new element to the meta-package we increase the version to ``0.8.0``."
msgstr "Örneğin, meta paket, 2 ögeyi ``qiskit-aer`` ve ``qiskit-terra`` izliyorsa sürümü ``0.7.4``sürüm olur. Daha sonra, meta-pakete dahil etmeyi planladığımız yeni bir ögeyi ``qiskit-ignis`` yayınlıyoruz. Meta paketine yeni ögeyi eklediğimizde sürümünü ``0.8.0`` a yükselttik."

#: ../../development_strategy.rst:49
msgid "Patch Version Increases"
msgstr "Yama Sürümü Yükseltilmesi"

#: ../../development_strategy.rst:51
msgid "When any Qiskit element that is being already tracked by the meta-package releases a patch version to fix bugs in a release we need also bump the requirement in the setup.py and then increase the patch version of the meta-package."
msgstr "Halihazırda meta paketi tarafından izlenen herhangi bir Qiskit ögesi, bir sürümdeki hataları düzeltmek için bir yama sürümü yayınladığında, setup.py'deki gereksinimi de karşılamamız ve ardından meta paketinin yama sürümünü yükseltmemiz gerekir."

#: ../../development_strategy.rst:56
msgid "For example, if the meta-package is tracking 3 elements ``qiskit-terra==0.8.1``, ``qiskit-aer==0.2.1``, and ``qiskit-ignis==0.1.4`` with the current version ``0.9.6``. When qiskit-terra release a new patch version to fix a bug ``0.8.2`` the meta-package will also need to increase it's patch version and release, becoming ``0.9.7``."
msgstr "Örneğin, meta-paketi yürürlükteki ``0.9.6`` sürümü ile birlikte 3 ögeyi izliyorsa ``qiskit-terra==0.8.1``, ``qiskit-aer==0.2.1`` ve ``qiskit-ignis==0.1.4``. Qiskit-terra, bir ``0.8.2`` hatasını düzeltmek için yeni bir yama sürümü yayınladığında, meta paketinin yama sürümünü de yükseltmesi ve ``0.9.7`` olması gerekir."

#: ../../development_strategy.rst:62
msgid "Additionally, there are occasionally packaging or other bugs in the meta-package itself that need to be fixed by pushing new releases. When those are encountered we should increase the patch version to differentiate it from the broken release. Do **not** delete the broken or any old releases from pypi in any situation, instead just increase the patch version and upload a new release."
msgstr "Ek olarak, meta paketin kendisinde zaman zaman yeni sürümleri göndererek düzeltilmesi gereken paketleme veya başka hatalar vardır. Bunlarla karşılaşıldığında, hatalı sürümden ayırmak için yama sürümünü yükseltmeliyiz. Hiçbir durumda hatalı veya eski sürümleri pypi'den sil**me**yin, bunun yerine sadece yama sürümünü yükseltin ve yeni bir sürüm yükleyin."

#: ../../development_strategy.rst:71
msgid "Minor Version Increases"
msgstr "Minör Sürüm Yükseltmesi"

#: ../../development_strategy.rst:73
msgid "Besides adding a new element to the meta-package the minor version of the meta-package should also be increased anytime a minor version is increased in a tracked element."
msgstr "Meta pakete yeni bir öge eklemenin yanı sıra, izlenen bir ögede alt sürüm yükseltildiğinde, meta paketin alt sürümü de yükseltilmelidir."

#: ../../development_strategy.rst:77
msgid "For example, if the meta-package is tracking 2 elements ``qiskit-terra==0.7.0`` and ``qiskit-aer==0.1.1`` and the current version is ``0.7.5``. When the ``qiskit-aer`` element releases ``0.2.0`` then we need to increase the meta-package version to be ``0.8.0`` to correspond to the new release."
msgstr "Örneğin, meta paketi 2 ögeyi ``qiskit-terra==0.7.0`` ve ``qiskit-aer==0.1.1`` izliyorsa ve güncel sürüm ``0.7.5`` ise ``qiskit-aer`` ögesi ``0.2.0`` sürümüne yükseltiğinde, alt paket sürümünü yeni sürüme karşılık gelen``0.8.0`` sürümüne yükseltmemiz gerekir."

#: ../../development_strategy.rst:84
msgid "Major Version Increases"
msgstr "Ana Sürüm Yükseltmesi"

#: ../../development_strategy.rst:86
msgid "The major version is different from the other version number components. Unlike the other version number components, which are updated in lock step with each tracked element, the major version is only increased when all tracked versions are bumped (at least before ``1.0.0``). Right now all the elements still have a major version number component of ``0`` and until each tracked element in the meta-repository is marked as stable by bumping the major version to be ``>=1`` then the meta-package version should not increase the major version."
msgstr "Ana sürüm, diğer sürüm numarası bileşenlerinden farklıdır. İzlenen her ögeyle kilit adımında güncelleştirilen diğer sürüm numarası bileşenlerinin aksine, ana sürüm yalnızca izlenen tüm sürümler arttırıldığında yükseltilir (en azından ``1.0.0`` dan önce). Şu anda bütün ögelerin ``0`` ana sürüm numarası bileşeni var ve meta-repoda izlenen her öge ``>=1`` olması için ana sürümü arttırılarak kararlı olarak işaretlenene dek meta paket sürümü ana sürüme yükseltilmemeli."

#: ../../development_strategy.rst:94
msgid "The behavior of the major version number component tracking after when all the elements are at >=1.0.0 has not been decided yet."
msgstr "Tüm ögeler >=1.0.0'da olduktan sonra ana sürüm numarası bileşeni izleme davranışı henüz kararlaştırılamadı."

#: ../../development_strategy.rst:99
msgid "Qiskit Element Requirement Tracking"
msgstr "Qiskit Öge Gereksinimi İzleme"

#: ../../development_strategy.rst:101
msgid "While not strictly related to the meta-package and Qiskit versioning how we track the element versions in the meta-package's requirements list is important. Each element listed in the setup.py should be pinned to a single version. This means that each version of Qiskit should only install a single version for each tracked element. For example, the requirements list at any given point should look something like::"
msgstr "Meta paket ve Qiskit sürüm oluşturma ile tam olarak ilgili olmasa da, meta paketin gereksinimler listesindeki öge sürümlerini nasıl izlediğimiz önemlidir. Setup.py'da listelenen her öge tek bir sürüme sabitlenmelidir. Bu, Qiskit'in her bir sürümünün, izlenen her öge için yalnızca tek bir sürüm kurması gerektiği anlamına gelir. Örneğin, herhangi bir noktadaki gereksinimler listesi aşağıdaki gibi görünmelidir::"

#: ../../development_strategy.rst:113
msgid "This is to aid in debugging, but also make tracking the versions across multiple elements more transparent."
msgstr "Bu hata ayıklamaya yardımcı olmak içindir ancak sürümleri birden çok öge arasında izlemeyi daha şeffaf hale de getirir."

#: ../../development_strategy.rst:116
msgid "It is also worth pointing out that the order we install the elements is critically important too. ``pip`` does not have a real dependency solver which means the installation order matters. So if there are overlapping requirements versions between elements or dependencies between elements we need to ensure that the order in the requirements list installs everything as expected. If the order needs to be change for some install time incompatibility it should be noted clearly."
msgstr "Öğeleri kurduğumuz sıranın da kritik önem taşıdığını belirtmekte fayda var. ``pip`` in gerçek bir bağımlılık çözücüsü yoktur, bu da kurulum sırasının önemli olmadığı anlamına gelir. Bu nedenle, ögeler arasında örtüşen gereksinim sürümleri veya bağımlılıklar varsa, gereksinimler listesindeki sıranın her şeyi beklendiği gibi kurmasını sağlamamız gerekir. Bazı yükleme süresi uyumsuzlukları için sıranın değiştirilmesi gerekiyorsa, bu açıkça belirtilmelidir."

#: ../../development_strategy.rst:125
msgid "Community Extensions"
msgstr "Topluluk Eklentileri"

#: ../../development_strategy.rst:127
msgid "Qiskit has been designed with modularity in mind. It is extensible in many different ways; on the page, we highlight the ways in which the Qiskit community has engaged with Qiskit and developed extensions and packages on top of it."
msgstr "Qiskit, modülerlik göz önünde bulundurularak tasarlanmıştır. Birçok farklı şekilde genişletilebilir; sayfada, Qiskit topluluğunun Qiskit ile nasıl etkileşim kurduğunu ve bunun üzerine uzantılar ve paketler geliştirdiğini vurguluyoruz."

#: ../../development_strategy.rst:132
msgid "Providers"
msgstr "Sağlayıcılar"

#: ../../development_strategy.rst:134
msgid "The Qiskit base provider is an entity that provides access to a group of different backends (for example, backends available through IBM Quantum). It interacts with those backends to do many things: find out which ones are available, retrieve an instance of a particular backend, get backend properties and configurations, and handling running and working with jobs."
msgstr "Qiskit temel sağlayıcısı, bir grup farklı backendlere erişim sağlayan bir varlıktır (örneğin, IBM Quantum aracılığıyla sağlanan backendler). Pek çok şey yapmak için bu backendlerle etkileşime girer: hangilerinin ulaşılabilir olduğunu bulmak, belirli bir backend örneği almak, backend özelliklerini ve yapılandırmalarını almak ve yürütmeyi sağlamak ve işlerle çalışmak."

#: ../../development_strategy.rst:141
msgid "Additional providers"
msgstr "Ek Sağlayıcılar"

#: ../../development_strategy.rst:143
msgid "**Decision diagram-based quantum simulator**"
msgstr "**Karar şeması tabanlı kuantum simülatörler**"

#: ../../development_strategy.rst
msgid "- **Organization:** Johannes Kepler University, Linz, Austria (Alwin Zulehner and Robert Wille)"
msgstr "- **Organizasyon:** Johannes Kepler Üniversitesi, Linz, Avusturya (Alwin Zulehner ve Robert Wille)"

#: ../../development_strategy.rst
msgid "- **Description:** A local provider which allows Qiskit to use decision diagram-based quantum simulation"
msgstr "- **Tanımlama:** Qiskit'in karar şeması tabanlı kuantum simülasyon kullanmasına olanak sağlayan yerel bir sağlayıcı"

#: ../../development_strategy.rst
msgid "- **Qiskit Version:** 0.7"
msgstr "-** Qiskit Sürümü: ** 0.7"

#: ../../development_strategy.rst
msgid "- **More info:**  `Webpage at JKU <http://iic.jku.at/eda/research/quantum_simulation>`__, `Medium Blog <https://medium.com/qiskit/classical-simulators-for-quantum-computers-4b994dad4fa2>`__ and `GitHub Repo <https://github.com/Qiskit/qiskit-jku-provider>`__"
msgstr "-** Daha fazla bilgi: ** `JKU web sayfası <http://iic.jku.at/eda/research/quantum_simulation>` __, `Medium Blog <https://medium.com/qiskit/classical-simulators-for-quantum-computers-4b994dad4fa2>` __ ve `GitHub Repo <https://github.com/Qiskit/qiskit-jku-provider>` __"

#: ../../development_strategy.rst:154
msgid "**Quantum Inspire**"
msgstr "**Quantum Inspire**"

#: ../../development_strategy.rst
msgid "- **Organization:** QuTech-Delft"
msgstr "-** Organizasyon:** QuTech-Delft"

#: ../../development_strategy.rst
msgid "- **Description:** A provider for the Quantum Inspire backend"
msgstr "-** Açıklama:** Quantum Inspire backendi için bir sağlayıcı"

#: ../../development_strategy.rst
msgid "- **More info:** `Medium Blog <https://medium.com/qiskit/quantum-inspire-and-qiskit-f1be608f8955>`__ and `GitHub <https://github.com/QuTech-Delft/quantuminspire>`__."
msgstr "-** Daha fazla bilgi: ** `Medium Blog <https://medium.com/qiskit/quantum-inspire-and-qiskit-f1be608f8955>` __ ve ` GitHub <https://github.com/QuTech-Delft/quantuminspire>` __."

#: ../../development_strategy.rst:164
msgid "Transpiler"
msgstr "Transpiler"

#: ../../development_strategy.rst:166
msgid "Circuit optimization is at the heart of making quantum computing feasible on actual hardware. A central component of Qiskit is the transpiler, which is a framework for manipulating quantum circuits according to certain transformations (known as transpiler passes). The transpiler enables users to create customized sets of passes, orchestrated by a pass manager, to transform the circuit according to the rules specified by the passes. In addition, the transpiler architecture is designed for modularity and extensibility, enabling Qiskit users to write their own passes, use them in the pass manager, and combine them with existing passes. In this way, the transpiler architecture opens up the door for research into aggressive optimization of quantum circuits."
msgstr "Devre optimizasyonu, kuantum hesaplamayı gerçek donanımda uygulanabilir hale getirmenin merkezinde yer alır. Qiskit'in merkezi bir bileşeni, belirli dönüşümlere (transpiler (aktarıcı) geçişleri olarak bilinir) göre kuantum devrelerini işlemek için bir çerçeve olan transpilerdir. Transpiler, kullanıcıların devreyi geçişler tarafından belirlenen kurallara göre dönüştürmek için bir geçiş yöneticisi tarafından düzenlenen özelleştirilmiş geçiş setleri oluşturmasına olanak tanır. Ek olarak, transpiler mimarisi modülerlik ve genişletilebilirlik için tasarlanmıştır, Qiskit kullanıcılarının kendi geçişlerini yazmalarına, geçiş yöneticisinde kullanmalarına ve bunları mevcut geçişlerle birleştirmelerine olanak tanır. Bu şekilde, transpiler mimarisi, kuantum devrelerinin agresif optimizasyonuna yönelik araştırma kapısını açar."

#: ../../development_strategy.rst:178
msgid "Additional passes"
msgstr "Ek geçişler"

#: ../../development_strategy.rst:180
msgid "**t|ket〉 optimization & routing pass**"
msgstr "** t|ket> optimizasyon & yönlendirme geçişi * *"

#: ../../development_strategy.rst
msgid "- **Organization:** Cambridge Quantum Computing"
msgstr "-** Organizasyon:** Cambridge Kuantum Hesaplama (Cambridge Quantum Computing)"

#: ../../development_strategy.rst
msgid "- **Description:** Transpiler pass for circuit optimization and mapping to backend using CQC's t|ket〉compiler."
msgstr "- **Açıklama:** Devre optimizasyonu için transpiler geçiş ve CQC'in t|ket〉derleyicisini kullanarak backend eşleme."

#: ../../development_strategy.rst
msgid "- **More info:** `Tutorial Notebook <https://github.com/Qiskit/qiskit-tutorials/blob/master/community/aqua/chemistry/QSE_pytket.ipynb>`__ and `GitHub <https://github.com/CQCL/pytket>`__."
msgstr "-** Daha fazla bilgi: ** ` Eğitsel Not Defteri <https://github.com/Qiskit/qiskit-tutorials/blob/master/community/aqua/chemistry/QSE_pytket.ipynb>` __ ve ` GitHub <https://github.com/CQCL/pytket>` __."

#: ../../development_strategy.rst:190
msgid "Tools"
msgstr "Araçlar"

#: ../../development_strategy.rst:192
msgid "Extending Qiskit with new tools and functionality is an important part of building a community. These tools can be new visualizations, slack integration, Jupyter extensions and much more."
msgstr "Qiskit'i yeni araçlar ve işlevlerle genişletmek, bir topluluk oluşturmanın önemli bir parçasıdır. Bu araçlar yeni görselleştirmeler, Slack birleşmesi, Jupyter uzantıları ve çok daha fazlası olabilir."

#: ../../development_strategy.rst:197
msgid "Additional Tools"
msgstr "Ek Araçlar"

#: ../../development_strategy.rst:198
msgid "**OpenControls library**"
msgstr "** OpenControls kitaplığı **"

#: ../../development_strategy.rst
msgid "- **Organization:** Q-CTRL"
msgstr "-** Organizasyon:** Q-CTRL"

#: ../../development_strategy.rst
msgid "- **Description:** Library of quantum control pulses derived from the open literature."
msgstr "-** Tanımlama:** Açık literatürden elde edilen kuantum kontrol atımlarının kütüphanesi."

#: ../../development_strategy.rst
msgid "- **More info:**  `GitHub <https://github.com/qctrl/python-open-controls>`__ and `Q-CTRL website <https://q-ctrl.com/products/open-controls/>`__"
msgstr "-** Daha fazla bilgi: ** `GitHub <https://github.com/qctrl/python-open-controls>` __ ve `Q-CTRL web sitesi <https://q-ctrl.com/products/open-controls/>` __"

